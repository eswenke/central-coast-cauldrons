create table
  public.cart_items (
    id integer generated by default as identity,
    cart integer not null default 0,
    potion text not null default ''::text,
    quantity integer not null default 0,
    constraint cart_items_pkey primary key (id),
    constraint public_cart_items_cart_fkey foreign key (cart) references carts (id) on delete cascade,
    constraint public_cart_items_potion_fkey foreign key (potion) references potions (sku)
  ) tablespace pg_default;

create table
  public.carts (
    id integer generated by default as identity,
    customer text not null default ''::text,
    class text not null default ''::text,
    level integer not null default 0,
    constraint carts_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.global_inventory (
    id integer generated by default as identity,
    red_ml integer not null default 0,
    green_ml integer not null default 0,
    blue_ml integer not null default 0,
    dark_ml integer not null default 0,
    gold integer not null default 0,
    potions integer not null default 0,
    ml_capacity integer not null default 10000,
    potion_capacity integer not null default 50,
    constraint global_inventory_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.potions (
    sku text not null default ''::text,
    price integer not null default 0,
    inventory integer not null default 0,
    type integer[] null,
    constraint potions_pkey primary key (sku)
  ) tablespace pg_default;

create table
  public.processed (
    id integer not null,
    type text null default ''::text,
    constraint processed_pkey primary key (id),
    constraint processed_id_key unique (id)
  ) tablespace pg_default;